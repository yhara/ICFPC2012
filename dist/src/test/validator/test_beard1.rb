# -*- coding: utf-8 -*-

=begin
This file is generated by mktest command.
generated at 2012-07-16T17:19:47+09:00

##########
#**  \\\\#
#.R..    #
# \  ..*\#
#!   ..*!#
####   # #
#\\... # L
#\\.W... #
#\\.     #
##########

Growth 15
Razors 0

|
| RRURRRRLLLLLLDDRRRRLLLLLURRDRRRURRDLLLLLLDLRRLULURRDRRDLLRRDDLLLLDRDLA
v

##########
#        #
#        #
#        #
#**   .*!#
####   # #
#   *  # O
#  .W...W#
#R .WWWWW#
##########
score: 531
=end

class LambdaLifter
  class TestBeard1 < Test::Unit::TestCase
    should "Validatorと同じ結果になる" do
      commands = "RRURRRRLLLLLLDDRRRRLLLLLURRDRRRURRDLLLLLLDLRRLULURRDRRDLLRRDDLLLLDRDLA"
      score = 531
      map = <<'EOS'
##########
#**  \\\\#
#.R..    #
# \  ..*\#
#!   ..*!#
####   # #
#\\... # L
#\\.W... #
#\\.     #
##########

Growth 15
Razors 0
EOS
      processed_map = <<'EOS'
##########
#        #
#        #
#        #
#**   .*!#
####   # #
#   *  # O
#  .W...W#
#R .WWWWW#
##########
EOS

      mine = Mine.new(map)
      commands.each_char do |s|
        mine.step!(s)
      end
      ascii_map = mine.validator_map
      # Validatorはクリア時にOだがMineはクリア時はRなのでその補正
      ascii_map = ascii_map.sub("R", "O") if !/O/.match(ascii_map)
      assert_equal processed_map, ascii_map, <<INPUT
#{map}

|
| #{commands}
v

#{processed_map}
score: #{score}
INPUT
      assert_equal score, mine.score
    end
  end
end
