# -*- coding: utf-8 -*-

=begin
This file is generated by mktest command.
generated at 2012-07-16T17:55:05+09:00

        ################
        #*****#!!  1   #
        #..\..#        #
#########\\\\ # .\\\.  #
#.............# *      #
#.. .\\\#..!..#\**     #
#.. LW\\#W  ..##### ####
#..R\\\\#.. ..*\*\*W...#
#.......A.. ...\.\...\\#
#..........     **     #
############....\.######
           #.....!#
           ########

Growth 10
Trampoline A targets 1

|
| RRRRULULA
v

        ################
        #*****#!!  t   #
        #..\..#        #
#########\\\\ # .\\\.  #
#.............# *      #
#.. .R \#..!..#\**     #
#.. LW  #W  ..##### ####
#..     #.. ..*\*\*W...#
#.......T.. ...\.\...\\#
#..........     **     #
############....\.######
           #.....!#     
           ########     
score: 392
=end

class LambdaLifter
  class TestBeard3 < Test::Unit::TestCase
    should "Validatorと同じ結果になる" do
      commands = "RRRRULULA"
      score = 392
      map = <<'EOS'
        ################
        #*****#!!  1   #
        #..\..#        #
#########\\\\ # .\\\.  #
#.............# *      #
#.. .\\\#..!..#\**     #
#.. LW\\#W  ..##### ####
#..R\\\\#.. ..*\*\*W...#
#.......A.. ...\.\...\\#
#..........     **     #
############....\.######
           #.....!#
           ########

Growth 10
Trampoline A targets 1
EOS
      processed_map = <<'EOS'
        ################
        #*****#!!  t   #
        #..\..#        #
#########\\\\ # .\\\.  #
#.............# *      #
#.. .R \#..!..#\**     #
#.. LW  #W  ..##### ####
#..     #.. ..*\*\*W...#
#.......T.. ...\.\...\\#
#..........     **     #
############....\.######
           #.....!#     
           ########     
EOS

      mine = Mine.new(map)
      commands.each_char do |s|
        mine.step!(s)
      end
      ascii_map = mine.validator_map
      # Validatorはクリア時にOだがMineはクリア時はRなのでその補正
      ascii_map = ascii_map.sub("R", "O") if !/[LO]/.match(ascii_map)
      assert_equal processed_map, ascii_map, <<INPUT
#{map}

|
| #{commands}
v

#{processed_map}
score: #{score}
INPUT
      assert_equal score, mine.score
    end
  end
end
